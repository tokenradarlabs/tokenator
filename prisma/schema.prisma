// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Token {
  id          String  @id @default(uuid())
  address     String  @unique
  alerts      Alert[]
  prices      TokenPrice[]
}

model DiscordServer {
  id     String  @id @unique
  name   String?
  alerts Alert[]
}

enum PriceAlertDirection {
  up
  down
}

model Alert {
  id              String        @id @default(uuid())
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  channelId       String
  enabled         Boolean       @default(true)
  lastTriggered   DateTime?
  priceAlert      PriceAlert?   @relation("AlertToPriceAlert")
  discordServerId String
  discordServer   DiscordServer @relation(fields: [discordServerId], references: [id])
  tokenId         String
  token           Token         @relation(fields: [tokenId], references: [id])
}

model PriceAlert {
  id        String              @id @default(uuid())
  direction PriceAlertDirection
  value     Float
  alertId   String              @unique
  alert     Alert               @relation("AlertToPriceAlert", fields: [alertId], references: [id])
}

model TokenPrice {
  id        String   @id @default(uuid())
  price     Float
  timestamp DateTime @default(now())
  tokenId   String
  token     Token    @relation(fields: [tokenId], references: [id])

  @@index([timestamp])
  @@index([tokenId])
}
